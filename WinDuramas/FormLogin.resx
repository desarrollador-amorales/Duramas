<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcI
        CQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCABAAEIDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD+f+iiigApRzV/wp4U1Px14kstH0XT73VtW1KZbe0s7SFpp7mR
        jhURFBLEnsBX6hfsZ/8ABKPTP2ZtAh8a/EwafqPjS3hN5FZSSI+n+G9o3F3fOyWdAMl8mOMglSxCyDws
        94gwuVUueu7yfwxW7/4Hd/roetlOT18wq8lLRLd9F/wfI/LXVNLudE1GezvLee0u7WRopoJozHJC6nBV
        lOCCDwQar1/Qj+3D/wAEvPhl/wAFXP2fPD3j3wZrGgWPj2fRbcaV4usJBPYa35UQj+zXxjyXCshi80Az
        QlNpDhPKr8JP2g/2dvGX7LHxT1HwZ480K88PeIdNOZLecArKhztlikXKSxNglZEJVuxrm4d4ow2awcY+
        5Vj8UHuvTuvy6pBmmUVcHK796D2ktv6/pHE0UUV9MeSFFFFABXoX7MX7Lfjf9sH4uWPgrwDos+s61eAy
        yEfJb2ECkB7i4lPyxRLuGWbuyqMsyqd79hj9kO+/bf8A2idK8B2mv6R4Wguke6vtW1Ikw2NtGV3uEGPM
        k+YBE3KGZlDOi5cfu5ql/wDs+/8ABCL9lFYY1+wJqAzFEpSfxD43vI1+8TxuVd/LfLBAJMABpAJPkOJO
        KVgJRweEh7TET+GPbzf+X32Wp7mVZO8SnXrvlpR3f6I8t/Zu/YH+FX/BIj4G6l4v8T63ptx4jitf+J74
        vvoyqQBh/wAeljHguqMflCqDNO3UYKxJ+b/7av8AwUC8bf8ABRj4jweAfh3pGr2nhW+ufLtNJgGb7XGX
        LCW6KkqqKAX8vd5cYXc7MUDre8XeNfj9/wAF7v2n10rSLJbfQ9MfzbfT1lePQvCFqxK+fcy4JeVgDukK
        mWUgrGgULGv6GaX+yl8HP+COv7MF/qV5qcH9o3EC2+r+J76ILf65ORuFrbRAkohK5WBCeF3SM2wuvxsu
        TKayxWYv6xj5/DBaqF9tvwt6R6yPpqUpY6H1bCfusLH4pbc3f+vv7H57fs+ftN/Hr/ghX8fZPDfiXQrl
        /DeteVqN/wCG7y43aZr1u6gLe2Vwu5UlKgKJo84KeXKjeWYx+pfxJ8OfAT/guT+yjbalaXH20WQxaXyI
        kWv+DLxxkxSpk4DbfmjJaGYLuRiVSRL3gLxh+z//AMFxf2NRokyNqaaNaxw3ljNstvEHhC88sItxEfn2
        htgKyLvhlC7HBKvGv5NfG39n/wCNn/BDz9pK08T+GtakudCupmtrDXbeFv7O12A/M1le2+SFcquTExPK
        b4nJQSLH7vOa/wD0C5jT+Snb/gert/NExXNgKf8Az9wsvm4/1+fZni/7bH7C/jb9hj4nNoXie2F1pl2W
        fSNctUb7Fq8Q6lCfuSLkb4m+ZCQeVZHbxiv3D+C/7Y/wr/4Kw/AzUPDeu6RYprP2cSa34VvZNzwkcC7s
        5OGZATxImJIi21sBlaT8y/8Agor/AME9dY/YT8W6JcNPNfeD/GhupPD13dKI7p0gMXmxypgAlPPixIoC
        SBsgKQyL9hw9xPOvW/s3MoezxMenSVuq+WvZ7rTbxs2yWNKn9cwcuai/vXk/6v3PnHI9KKSivtD5w+1P
        +CDWif2/+21fQYzjwtev+Utv/jUv/BZDwy+s/wDBSmy8P3dxdG1k0/R7GNfMLfZopACVjDZCjdI7YAxu
        YnHJrpv+DbnTRqv/AAUG1CNsYHg7UG5/67WtaP8AwWm0kWf/AAWa0W2UDDL4cH5+XX57OTXFk2ulD9T6
        uGuSRi/+fn6H6HeKf2pvgb/wR3/Yujt9A8J3+mRQTG20/QYfnvfEmpFMma4vdm0khcvM4yiALHFgRxV+
        VOn2Hx2/4LuftVpPezJHYWb7GmEbx6H4RtHOdkSZJaRtowuWllK5Ztql1+zf+Dl3wT/wi37OngCTZt8z
        xXOnT/p1evpb/gkn4e0L4U/8EyfhN4ltNLt7W71LSJri8aNNi3ExvLhfPcAZLbUUEjkhR6V8dl+OjlmS
        rO4R58TWm480tbb6r7vm99ND3cVhvrmYvL78tGEU+VddtPx/p6n5cftP/sN/Gb/gjZ8X7H4mfDvxHqN/
        4Ut7k29j4r0+DZ9nYnDWWo2+XRd5GNr74Zlxg7g0affH7FP7Z/hv/gsf8LtX8Ga14c0y28V22nrJ4n0S
        6Rn0q5g3on2uBjlgnmMhCE+bE5XazbfMr6S+NOnX3hv9nvxjDdfYdS03xXp10Htrq3S4jkhmjZmDIwKM
        pDcZB4PqAa/Ln/g2W8QJ4d/al+I0j4/eeDdnP/X/AGp/pTnj1neTVsZio2xGG5bTjo3d9bf1fVWGsK8u
        x9Ojh3elWv7r1tZf1+tzz3QP2ctK/Y4/4L5eB/h14evr260fQPiDoEMMtwcSPFcm0mkjbHVMTvHz95R8
        2cmvpX/g6uuftK/AY7t3/IwZOf8AsGV4r+05rouf+Dj7S79cYHj7wzID9IbD/Cu+/wCDl7xJ/wAJAvwT
        +bd5P9u9/X+zv8K+hpVJ1c6yqtUd5Oi233bg7nkTpqGX4yMVZKpb/wAmR+WO2ijNFfqJ8afXH/BE79sD
        wX+xV+23D4o8f3N3p/hnU9EvNGnv4LZ7n7A8pjdJXjQGRk3RBTsVmG/IBxitr/grL+174B+O/wDwU2sv
        iX4A1g+LPCmnwaNILiO0uLIzvahDLGEuI43BypGSuPTNfFmaM147yTDvMHmbb53DktfS179r3+Z3LMKq
        wywunLfm87n6n/8ABev/AIKR/Bb9uH9nbwDYfDLxdNrmr2OvyanfafPpF5ZzWML2zKN7SxLEzBjtIjkc
        Z6Ejmvmj/gn1/wAFafGP7G+iN4J1g3Xin4XXsjM+kvJm40V3JLzWTMcLkks0JIjclj8jN5g+R80Vy4Xh
        fAUcu/suSc6er97fV33SVmuj3Np5xiZYv65F2npttofo9/wVQ/4LfzftEeErP4bfCN7/AEfwbbWUVrq2
        vSIYL7XSIlV4olPzQW2QQc4kkHB2KWRvFf8AgkV+1R4Q/ZR+MnivV/GOs/2JZapoP2G3l+yT3HmS/aYZ
        NuIUcj5UY5IA4618l0U6fC+Ap5dLLKScYS3a+J+bdt/l5Ip51iXi44ybvKOyey8rH0548/as8N/EH/gq
        hY/FgXFxY+FYvFemX7XNxA5kW2tfIjaYxoGfkQlgoBbBAxniuq/4K5/toeDv2tNa8DWvg6+uNWtfDEN6
        9xetayW8TvcGDCKsqq5KiDJJUD5xgnBr45ozWseH8LHE0MVG96MeSOulrW101dvMiWbV5UatB2tUlzPv
        e99Aooor3DzD/9k=
</value>
  </data>
</root>